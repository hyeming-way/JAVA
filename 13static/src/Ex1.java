
/*
 	static 변수(클래스 변수), static 메소드(클래스 메소드)
 	
 	인스턴스 변수(객체 변수), 인스턴스 메소드(객체 메소드)
 	
 	지역변수,
 	
 	static 초기화블럭, 객체 생성시 JVM메모리 로딩 및 호출순서
 	
주제 : 자바에서 클래스안의 멤버변수(static을 붙이거나, 안 붙인 모든 변수)들 종류 알아보자 	
*/

class Test{
	
	//멤버변수 종류 2가지
	
	//1. 인스턴스변수(객체변수)
	// - static을 붙이지 않고 작성된 변수
	// - 새로운 객체메모리를 생성할때마다 객체메모리 내부에 개별적으로 할당되는 변수메모리
	// - 새로운 객체메모리를 생성할때마다 JVM의 heap영역의 객체메모리 안에 할당되는 변수메모리
	int x; //JVM의 heap영역에 할당
	
	//2. 클래스변수(정적변수)
	// - static을 붙이고 작성된 변수
	// - class파일이 JVM메모리의 Method영역에 올라가면서 class파일 내부에 개별적으로 할당되는 변수메모리
	// - class파일 하나당 한번만 개별적으로 할당되는 변수메모리
	// - 객체메모리를 생성하지않고도 클래스명.클래스변수명을 작성해서 접근하거나 값을 변경할 수 있는 변수메모리
	// - 목적 : 생성된 여러 객체메모리들의 공용으로 사용할 데이터를 저장하는데 이용되는 변수메모리
	static int y; //JVM의 Method영역에 할당
	
	//생성자
	//정수 하나를 매개변수로 받아서 인스턴스변수(객체변수) x와 클래스변수 y에 각각 누적
	public Test(int z) {
		this.x += z;
		Test.y += z; //클래스명.클래스변수명 = 저장할매개변수값;
	}
	
}

public class Ex1 {

	//static을 붙여 만들어 놓은 main메소드 또한 Ex1클래스 내부에 만들어져있는
	//클래스 메소드라고 부릅니다.
	public static void main(String[] args) {
		
		Test test = new Test(10);
		
		//1. 클래스변수 static int y의 값을 불러와 출력
		//방법 : Test클래스의 객체 생성없이 클래스명.클래스변수명 사용해서 y클래스변수에 저장된 값 불러와 사용
		System.out.println("클래스변수 y = " + Test.y); //클래스변수 y = 10
		
		//2. 인스턴스변수(객체변수) x의 값을 객체생성없이 클래스명.객체변수명으로 접근? 불가능
		//System.out.println("인스턴스변수 x = " + Test.x); -> 컴파일 에러 발생
		
		//3. 인스턴스변수 x의 값을 불러와 사용하려면?
		//		방법 : 객체 생성 후 참조변수명.인스턴스변수명 사용해서 x인스턴스변수에 저장된 값 불러와 사용
		Test t1 = new Test(10);
		System.out.println("\n인스턴스 변수 x = " + t1.x); //인스턴스 변수 x = 10
		System.out.println("클래스변수 y = " + Test.y); //클래스변수 y = 20
		System.out.println("클래스변수 y = " + t1.y); //클래스변수 y = 20
		
		/*
			결론
			
			클래스변수값을 불러와 사용하려면?
			
			방법1. 클래스명.클래스변수명 (추천)
			방법2. 객체 생성 후 -> 참조변수명.클래스변수명
		*/
		
		//---------------------------------------------------------------------------------
		
		Test t2 = new Test(10);

		System.out.println("\n인스턴스 변수 x = " + t2.x); //인스턴스 변수 x = 10
		System.out.println("클래스변수 y = " + Test.y); //클래스변수 y = 30
		
		/*
			결론
				출력결과를 보면 static으로 선언된 클래스변수 y는?
				클래스 하나만 하나의 클래스변수만 JVM메모리에 올라가서 생성되므로
				위의 t1, t2참조변수의 객체가 클래스변수 y를 하나 공유받아 사용하므로
				클래스변수 y안의 값이 계속 += 10 누적된다고 보면 된다.
				
				출력결과를 보면 객체를 생성할때 객체 메모리 내부에 만들어지는 x변수는?
				객체를 생성할때마다 각각의 객체메모리에 각각개별로 JVM메모리의
				heap영역의 x인스턴스변수 메모리가 생성됨 
				그러므로 각각 x인스턴스변수 2개는 각각 +=에의해 10이 저장됨 
			
		*/	
		

	}

}
