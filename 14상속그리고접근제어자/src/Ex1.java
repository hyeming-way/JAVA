/*
	상속이란?
	- 부모클래스(기존에 존재하는 클래스)의 멤버(변수, 메소드)를 
	  자식클래스(새롭게 만드는 클래스)에서 물려받아 확장하거나 재정의하여 새로운 클래스를 만드는 것
	- 상속을 통해 Parent클래스의 메소드와 변수들을 Child자식클래스에서 재사용할 수 있다. (코드 중복 줄임)
	- 추가적으로 Child클래스만의 새로운 메소드를 정의할 수 있음.
	  
	상속의 기본 문법
	
		class 부모클래스{
			//멤버변수 및 메소드
		}
		
		class 자식클래스 extends 부모클래스{
			//부모클래스의 변수 및 메소드가 상속됨
			//추가적으로 자식클래스만의 새로운 기능 정의 가능
		}
*/
//주제 : 기존에 만들어져 있는 부모클래스 내부의 메소드를 상속받아
//		새로운 자식클래스를 만드는 예

//Parent클래스(기존에 존재하는 부모클래스)
class Parent{
	//메소드
	public void parentPrn() {
		System.out.println("Parent부모클래스의 메소드는 상속된다.");
	}
}

//Child클래스(새롭게 설계하는 자식클래스)
//-> Child클래스는 Parent클래스의 멤버(변수 또는 메소드)를 상속받아서 설계함(extends 사용)
//-> 상속을 통해 Parent클래스의 메소드와 변수들을 Child자식클래스에서 재사용 할수 있다
//-> 추가적으로 Child클래스만의 새로운 메소드를 정의할수 있음 
class Child extends Parent {
	/*
	Parent부모클래스에 정의되어있는 메소드를 상속받아 아래와 같이 작성된다.
	단! 우리 개발자 눈에는 보이지 않는다.
	
	public void parentPrn() {
		System.out.println("Parent부모클래스의 메소드는 상속된다.");
	}
	*/
	
	//Child클래스의 고유 메소드
	public void childParent() {
		System.out.println("Child클래스의 메소드는 Parent클래스에서 사용할 수 없다.");
	}
	
}

public class Ex1 {

	public static void main(String[] args) {
		
		//기존에 만들어져있던 부모클래스 역할을 하는 Parent클래스의 객체메모리 생성
		Parent p = new Parent(); //기본생성자 호출
		p.parentPrn(); //Parent 자기자신 객체메모리 내부의 parentPrn()메소드 호출
		
		/*	
										0x11
		[ 0x11  ] = ---------------Parent 객체 메모리-------------------
		
								public void parentPrn(){}
					
					-------------------------------------------------

		*/
		
		//Parent부모클래스의 메소드를 물려받아(상속받아) 설계한 Child 자식클래스의 객체메모리 생성
		Child c = new Child();
		c.parentPrn(); //부모 Parent클래스에서 상속받은 메소드 호출가능
		c.childParent(); //자식 Child클래스의 고유 메소드 호출가능
		
		/*		
		 					0x10 (Child 객체 메모리)

			[0x10] = ------------- 부모 Parent 부분 --------------------------	
			
						public void parentPrn() {}  // 부모 클래스의 메소드
			
			
					 -------------- 자식 Child 부분 ---------------------------
			
					public void childParent() {}  // 자식 클래스의 고유 메소드
			
					---------------------------------------------------------	
	
			[결론]
			- 상속의 목적은 기존(부모) 클래스의 변수와 메소드를 재사용하여
			새로운(자식) 클래스를 효율적으로 확장하는 것.
			- 자식 클래스는 부모 클래스로부터 멤버(변수, 메소드)를 상속받고,
			추가적으로 자신만의 멤버를 정의하여 새로운 기능을 추가할 수 있음.
			- 자식 클래스의 객체를 생성하면 부모 클래스의 멤버에도 접근 가능.
		       
		 */		   

	}

}
