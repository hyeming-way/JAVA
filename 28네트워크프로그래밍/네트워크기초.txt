자바 네트워크 기초 개념

1. 서버와 클라이언트 개념

	- 서버(Server):
		- 서버는 클라이언트에게 서비스나 데이터를 제공하는 역할을 합니다.
		- 예: 웹 서버(웹사이트 제공), 메일 서버(이메일 전송), 파일 서버(파일 공유) 등.
		- 서버는 항상 켜져 있어야 하며, 클라이언트의 요청을 기다립니다.
	
	- 클라이언트(Client):
		- 클라이언트는 서버에 요청을 보내고, 서버로부터 응답을 받는 역할을 합니다.
		- 예: 웹 브라우저(크롬, 사파리), 이메일 클라이언트(아웃룩), 모바일 앱 등.
		- 클라이언트는 필요할 때 서버에 접속하여 데이터를 요청합니다.
	
	- 통신 과정:
		1. 클라이언트가 서버에 요청(Request)을 보냅니다.
		2. 서버는 요청을 처리하고 응답(Response)을 보냅니다.
		3. 클라이언트는 응답을 받아 사용자에게 보여줍니다.



2. IP 주소 개념

	- IP 주소(Internet Protocol Address):
		- 인터넷에 연결된 모든 장치(컴퓨터, 스마트폰, 서버 등)를 식별하는 고유한 주소입니다.
		- 숫자로 이루어져 있으며, IPv4와 IPv6 두 가지 형식이 있습니다.
		- IPv4: `192.168.1.1`과 같이 4개의 숫자로 구성됩니다. (예: `8.8.8.8`은 Google의 공개 DNS 서버 주소)
		- **IPv6**: `2001:0db8:85a3:0000:0000:8a2e:0370:7334`와 같이 더 긴 형식입니다. (IPv4 주소가 부족해지면서 등장)
		
	- IP 주소의 역할:
		- 데이터를 보낼 때, 목적지(서버)를 찾기 위해 사용됩니다.
		- 예: 웹 브라우저에서 `www.google.com`을 입력하면, DNS를 통해 Google 서버의 IP 주소를 찾고, 그 주소로 데이터를 보냅니다.


3. DNS 개념

	- DNS(Domain Name System):
		- 사람이 이해하기 쉬운 도메인 이름(예: `www.google.com`)을 컴퓨터가 이해하는 IP 주소(예: `142.250.196.206`)로 변환해주는 시스템입니다.

	- DNS의 동작 과정:
		1. 사용자가 브라우저에 `www.google.com`을 입력합니다.
		2. 브라우저는 DNS 서버에 `www.google.com`의 IP 주소를 요청합니다.
		3. DNS 서버는 도메인 이름에 해당하는 IP 주소를 찾아 브라우저에게 알려줍니다.
		4. 브라우저는 해당 IP 주소로 접속하여 웹페이지를 불러옵니다.
	
	- DNS의 중요성:
		- IP 주소는 기억하기 어렵지만, 도메인 이름은 쉽게 기억할 수 있습니다.
		- DNS는 인터넷 사용을 편리하게 만들어줍니다.



4. Port 개념

	- Port(포트):
		- 한 컴퓨터에서 여러 프로그램이 네트워크 통신을 할 때, 각 프로그램을 구분하기 위한 번호입니다.
		- IP 주소가 아파트 주소라면, 포트는 아파트의 호수입니다.
	
	- 포트 번호의 종류:
		- 0 ~ 1023: 잘 알려진 포트(Well-known ports), 주요 서비스에 사용됩니다.
		- 예: `80`(HTTP-웹서버), `443`(HTTPS-보안등록된 웹서버), `21`(FTP-파일전송프로그램), `25`(SMTP-이메일프로그램)
		- 1024 ~ 4915: 등록된 포트(Registered ports), 특정 애플리케이션에 사용됩니다.
		- 49152 ~ 65535: 동적 포트(Dynamic ports), 임시로 사용됩니다.
	
	- 포트의 역할:
		- 같은 IP 주소를 사용하는 컴퓨터에서 여러 서비스(웹 서버, 메일 서버 등)를 구분합니다.
		- 예: `www.google.com:80`은 Google의 웹 서버에 접속하라는 의미입니다.
	
5. 소켓 ?
 - IP + PORT를 부여한 컴퓨터의 프로램간데 데이터를 주고 받는 스트림통로
 - 소켓 종류
    1. ServerSocket클래스 (서버 프로그램 만들때 사용)
    2. Scoket클래스(클라이언트 프로그램 만들때 사용)
 

6. 소켓프로래밍?
 - 클라이언트 프로그램 개발,  서버 프로그램 개발 후 서로 네트워크를 통해 데이터를 주고 받는 네트워크프로그래밍

-----------------------------------------

예제1. 로컬 컴퓨터의 IP와 네이버 웹 사이트(www.naver.com)의 IP정보 출력
->  InetAddressExample.java

예제2. URL 클래스의 객체로 웹 사이트 요청주소를 분석
->  URLExample.java


예제3. URL 클래스의 객체로 실제로 웹 페이지에 접근하여 데이터를 가져오는 방법
->  URLContentReader.java


예제4. 소켓 프로그래밍 간단한 예
-> ServerExample.java   (서버 프로그램)
-> ClientExample.java   (클라이언트 프로그램)

응용예제5. 소켓 프로그래밍 _실시간 다중 채팅
-> ChatServer.java       (서버 프로그램)
-> ChatClient.java       (클라이언트 프로그램)





