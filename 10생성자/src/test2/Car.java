package test2;
/*
	1. 생성자 오버로딩이란?
		- 같은 클래스 내에서 같은 이름의 생성자를 여러개 정의하는 것을
		  생성자 오버로딩이라고 합니다.
		  단, 매개변수의 갯수나 매개변수의 자료형을 다르게 작성해서 생성자 오버로딩한다.
		- 생성자 오버로딩 목적 : 객체를 생성할 때 다양한 방법으로 객체변수값을 초기화할 수 있도록 하기 위함.
		
	2. 생성자 오버로딩 조건
		조건1. 생성자의 이름은 동일하게 작성한다. (클래스 이름과 동일)
		조건2. 매개변수의 갯수 또는 자료형을 다르게 작성한다.
		조건3. 반환 타입을 적으면 안 된다.
		
	3. this() 다른 생성자 호출 구문
		- 같은 클래스의 다른 생성자를 호출할 때 사용하는 구문
		- 생성자 내부에서만 작성해서 사용할 수 있으며, 생성자의 첫 줄에 작성해야 합니다.
		- 중복 코드 작성을 줄이고, 공통 로직을 하나의 생성자로 집중시키는 역할을 합니다.
		
	4. this 키워드 (생성된 객체메모리 자기자신의 주소번지를 기억하는 키워드)
		- 객체가 생성되면 this는 현재 객체를 가리키는 참조변수로 클래스 내부의 생성자 내부 또는 메소드 내부에서 작성할 수 있습니다.
		- 객체 내부에서 자신의 객체변수나 메소드에 접근할 때 사용합니다.
		- 보통 멤버변수 종류(객체변수)와 매개변수의 이름이 같을 때 구분하기위해 사용됩니다.
		
	5. this() vs this  차이점 표
	---------------------------------------------------------------------------------------------
	키워드							의미	사용 목적
	---------------------------------------------------------------------------------------------
	this			현재 객체 자기 자신	멤버 변수(객체 변수)와 매개변수를 구분하기 위해 사용
	this()			현재 클래스의 다른 생성자 호출	중복 코드를 줄이고, 생성자 내부에서 다른 생성자를 호출할 때 사용
	---------------------------------------------------------------------------------------------	

	요약:
	✅ this()는 생성자 내부에서 다른 생성자를 호출할 때 사용
	✅ this는 현재 객체의 멤버 변수(객체 변수)에 접근할 때 사용				
*/

public class Car { //자동차 클래스 정의
	
	//1. 멤버변수(객체변수) 정의 - 자동차 객체에 데이터를 저장할 변수들
	String company = "현대자동차"; //자동차 제조사 기본값 설정
	String model; //모델명
	String color; //차량 색상
	int maxSpeed; //최고속도
	
	//2. 생성자 오버로딩 (여러 개의 생성자를 정의하여 다양한 방식으로 객체의 변수값들을 초기화)
	//(1) 첫번째 생성자 : 매개변수 1개 (model)
	public Car(String model) {
		//this()를 사용하여 현재 클래스의 다른 생성자 -> Car(String model, String color, int maxSpeed)를 호출
		this(model, "은색", 250); //세번째 생성자 호출
	}
	
	//(2) 두번째 생성자 : 매개변수 2개 (model, color)
	public Car(String model, String color) {
		//this()를 사용하여 현재 클래스의 다른 생성자 -> Car(String model, String color, int maxSpeed)를 호출
		this(model, color, 250); //세번째 생성자 호출
	}
	
	//(3) 세번째 생성자 : 매개변수 3개 (model, color, maxSpeed)
	public Car(String model, String color, int maxSpeed) {
		//this를 사용하여 현재 객체메모리의 객체변수값 초기화
		this.model = model;
		this.color = color;
		this.maxSpeed = maxSpeed;
	}
	
	public static void main(String[] args) {
		
		//매개변수 1개인 생성자 호출하여 객체메모리 생성
		Car car1 = new Car("아반떼"); //model객체변수 ["아반떼"], color객체변수 ["은색"], maxSpeed객체변수[250]
		System.out.println(car1.model + ", " + car1.color + ", " + car1.maxSpeed); //아반떼, 은색, 250
		
		//매개변수 2개인 생성자 호출하여 객체메모리 생성
		Car car2 = new Car("소나타", "검정색");
		System.out.println(car2.model + ", " + car2.color + ", " + car2.maxSpeed); //소나타, 검정색, 250
		
		//매개변수 3개인 생성자 호출하여 객체메모리 생성
		Car car3 = new Car("제네시스", "파란색", 300);
		System.out.println(car3.model + ", " + car3.color + ", " + car3.maxSpeed); //제네시스, 파란색, 300

	}

}
