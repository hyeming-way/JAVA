
/*
	패키지 : .class자바 실행파일을 압축해 놓은 폴더
	 
	라이브러리 : 관련 있는 패키지들을 압축해 놓은 .jar파일
	 
	프레임워크 : 라이브러리 파일들을 압축해 놓은 큰단위의 폴더
	 
	API : 특정 자바프로그램과  특정 MySQL데이터베이스프로그램 등의 플랫폼을 
	       연결하는 중간 프로그램(JDBC API)
	       
	컬렉션 라이브러리
	 - 데이터를 저장할 가변으로 늘어나는 배열메모리를 만들때 사용되는 클래스들을 제공하는
	   패키지들의 모음 
	         
	컬렉션 라이브러리 내부에 만들어서 제공하는 최상위 Collection이라는 이름의 인터페이스
 
 	하위 Set인터페이스
 	- Set인터페이스를 구현한 자식가변길이 배열을 만들때 사용되는 클래스들은
 	  가변길이 배열을 만들어 객체(데이터)를 중복 저장을 허용하지 않고,
 	  또한 배열에 추가된 순서대로 객체를 저장하지 않고 랜덤으로 저장합니다.
 	
 	하위 List인터페이스
 	-  List인터페이스를 구현한 자식 가변길이 배열을 만들때 사용되는 클래스들은
 	   가변길이 배열을 만들어 객체(데이터)를 중복 저장을 허용하고,
 	   또한 배열에 추가된 순서대로 객체를 저장합니다.
 	
 	하위 Map인터페이스 
 	-  Map인터페이스를 구현한 자식 가변길이 배열을 만들때 사용되는 클래스들은
 	   가변길이 배열을 만들어 객체(데이터)를 단독으로 저장하지 않고,
 	   (key-객체)를 한쌍으로 묶어 한쌍의 형태로 배열에 저장합니다.
 	   배열에 저장된 객체(데이터)를 얻으려면 key를 이용해서 객체(데이터)를 얻을수 있다



	주제 : Set부모인터페이스를 구현한(추상메소드를 오버라이딩한)
		  자식클래스 HashSet클래스를 사용하여 가변으로 칸이 늘어나는 가변길이 배열 만들기
		  
*/


import java.util.HashSet;
import java.util.Set;

//import java.util.*;

public class Collections01 {
	public static void main(String[] args) {
		
		//업캐스팅을 이용하여 부모Set인터페이스 자료형의 참조변수에
		//자식 HashSet클래스의 객체 생성 후 주소 저장
		
		Set set = new HashSet();
		/*
					--------          --------
						   |          |
						   |          |
						   |__________|
		*/
		
		//HashSet가변길이 배열에 저장된 객체(데이터)의 갯수 반환
		System.out.println( "HashSet배열메모리에 저장된 객체의 갯수 -> " + set.size() );
		//출력결과 "HashSet배열메모리에 저장된 객체의 갯수 -> 0"
		
		//HashSet가변길이 배열에 객체(데이터)를 추가하기 위해 add 메소드 사용!
		set.add("하나"); //<--- 오토박싱된 new String("하나"); 객체가 저장됨
		set.add(2); //<--- 오토박싱된 new Integer(2); 객체가 저장됨
		set.add(3.42); //<--- 오토박싱된 new Double(3.42); 객체가 저장됨
		set.add("넷"); //<--- 오토박싱된 new String("넷"); 객체가 저장됨
		set.add("five"); //<--- 오토박싱된 new String("five"); 객체가 저장됨
		set.add(new Integer(6)); //<--- 수동박싱을 통해 객체 저장
		set.add(2); //<--- 위에 만든 객체에 덮어씌어 저장됨 (중복X)
		set.add(2); //<--- 위에 만든 객체에 덮어씌어 저장됨 (중복X)
		
		System.out.println( "HashSet배열메모리에 저장된 객체의 갯수 -> " + set.size() );
		//출력결과 "HashSet배열메모리에 저장된 객체의 갯수 -> 6"
		
		//HashSet가변길이 배열에 저장된 객체들이 어떤것이 있는지 확인
		//toString()메소드를 호출해 전체 배열모습을 문자열로 변환해 반환받아서 출력
		System.out.println(set.toString());
		//출력결과 [2, 6, 넷, 하나, 3.42, five] <--- 객체들이 랜덤으로 저장된다.
		
		
		//결론 : HashSet가변 길이 배열에는 add메소드를 이용하여
		//		추가된 객체들의 순서대로 저장되지않고 랜덤으로 뒤섞여 저장됩니다.
		

	}

}
