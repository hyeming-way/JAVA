/*
 주제 : 기본자료형과 참조자료형의 의미를 이해하고
       각각의 차이점을 알아보자
       
       
 기본자료형 : 자바에서 제공하는 가장 기본적인 데이터타입 8가지를 의미
 
 1. int :  정수형 (예: 10, -5)
 2. double : 배정밀도 실수형 (예 : 3.14, -0.001)
 3. char : 문자형 (예: 'A', 'b')
 4. boolean : 불리언형 (true 또는 false)
 5. byte : 8비트 정수형
 6. short : 16비트 정수형
 7. long : 64비트 정수형
 8. float : 단정밀도 실수형
 
 
 참조자료형
 - 생성된 객체메모리를 참조(사용)하는 데이터 타입으로
   실제 데이터는 JVM메모리의 heap에 저장되고
   변수는 main메소드가 올라가는 JVM의  call Stack영역에 메모리 주소를 갖습니다
   참조 자료형 종류 : 클래스자료형, 배열자료형, 인터페이스자료형
   		
   		  Person person;
          Person[] persons;
          인터페이스자료형명  참조변수선언;
*/

//날짜정보(년도,월,일)을 저장하는 클래스
class MyDate{
	int year=2016; //년도 
	int month=1; //월
	int day=5;//일
}

public class Ex4 {
	public static void main(String[] args) {
		//참조자료형의 역할 : 생성된 객체메모리의 주소 번지로 
		//				  객체메모리를 참조(사용)하기 위해
		//				  객체메모리의 주소번지를 저장할 
		//				  참조변수 선언시 사용됨
		
		//클래스자료형  선언할참조변수명;
		MyDate       d;
		
		//참조변수d에 MyDate클래스의 객체메모리를 생성하여 객체메모리의 주소번지저장
		d = new MyDate();
				
		    //new MyDate <- MyDate라는 클래스의 새로운 객체 메모리를 생성 하는데
			//	  MyDate(); <- MyDate라는 이름의 생성자호출해서 객체메모리 생성함
/*		   
		     0x16 객체메모리의 주소번지  
		    ---------------
		    |  int year=2016; //년도 
	  0x16=	|	int month=1; //월
			|	int day=5;//일 
		    ----------------
*/
		
		//new로 생성할  MyDate객체 메모리의 주소번지를 저장할 
		//참조자료형이자 클래스자료형인 MyDate클래스자료형을 이용해
		//참조변수 t를 선언할수 있다.
		//요약 : 참조변수 t 하나더 만들자
		MyDate t;
		
		t   = d;//0x16
	// 0x16	
		
		System.out.println("참조자료형(클래스자료형)의 변수로 접근한 "
				         + "객체메모리의 변수값 출력");
		System.out.println(d.year + "/" + d.month + "/" + d.day);
		                   //2016   /     1         /     5
		System.out.println(t.year + "/" + t.month + "/" + t.day);
		
		
		//참조변수 t로 객체메모리에 접근해서 객체변수값 변경 해보자
		t.year = 2007;
		t.month = 7;
		t.day = 9;
		
		
		//참조변수 d로 접근해서출력하면 t참조변수로 접근하여 변경한 값이 출력됨
		//이유 : 참조변수 d와 t는 MyDate객체 메모리 하나를 동시에 사용(참조)하기때문
		System.out.println("참조자료형(클래스자료형)의 변수로 접근한 "
		         + "객체메모리의 변수값 출력");
		System.out.println(d.year + "/" + d.month + "/" + d.day);
		System.out.println(t.year + "/" + t.month + "/" + t.day);
		
		
		
		
		
		//---------------------------------------------------------
		//기본자료형 8가지 역할 :  값을 저장할 변수를 만들때 사용되는 자료형
		
		int x = 7;
		
		int y = x; //x변수에 저장되어 있는 값7을 y변수에 저장
		
		System.out.println("기본자료형의 변수값 출력");
		System.out.println("x->" + x + ", y->" + y);
		//                   x->7, y->7
		
		y = 20; //y변수의 값을 20으로 다시 변경해서 저장
		System.out.println("x->" + x + ", y->" + y);
		
		
		
		//결론 : 기본자료형은 값을 복사할때, 원본과 복사본이 독립적이다.
		//      기본자료형은 간단한 데이터를 저장을 위해 변수를 선언할때 사용되며
		//		값 자체를 저장하기 위해 사용합니다
		
		
//-----------------------------------------------------------------
		
	/*
		전체 결론
		1. 기본자료형은 값 자체를 변수에 저장하며, 변수간의 복사는 값 복사입니다.
		   따라서 한 변수의 값을 변경해도 다른 변수에저장된 값은 영향을 미치지 않는다.
		   
		2. 참조자료형은 객체의 메모리 주소를 저장하며,
		   변수 간의 복사는 객체메모리주소를 복사합니다.
		   따라서 한 참조변수가 참조하는(사용하는) 객체메모리의 변수값을 변경하면
		   다른 참조변수도 그 변경된 객체메모리의 변수값 사용하게(참조하게)됩니다.   
		
	*/	
		
		
		

	}

}













