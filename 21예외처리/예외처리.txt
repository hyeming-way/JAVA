
에러? 컴퓨터 하드웨어의 고장으로 인해 응용프로그램 실행 오류가 발생하는것.

예외? 잘못된 사용 또는 코딩으로 인한 오류가 발생하는것.
    
예외가 발생하면? 프로그램은 곧바로 종료된다.
              프로그램을 끝까지 수행하게 하려면 예외처리를 해주어야합니다
예외의 종류
	1. 일반 예외(Exception)
		-> 컴파일러가 예외처리 코드 여부를 검사하는 예외를 말한다. 
	2. 실행 예외(Runtime Exception)              
    	-> 컴파일러가 예외 처리코드 여부를 검사하지 않는 예외를 말한다
   
예외가 발생하면 예외 처리 클래스로부터 객체를 생성합니다.
이 객체는 예외처리시 사용됩니다. 자바의 모든 에러와 예외처리클래스는 Throwable을 상속받아 만들어지고
추가적으로 예외처리클래스는 java.lang.Exception클래스를 상속받는다.

	그림
							Throwable
								^                		 ^
							Exception					Error	
	일반예외처리											실행 예외 
  			  ^                 ^ 							
 	ClassNotFoundExcaption, InterruptedException...   RuntimeException
														    ^
 													 NullPointerException,  ArrayIndexOutOfBoundsException, NumberFormatException		    


예외처리 하는 코드 문법

	예외 발생 하지 않을것 같은 코드0;

	try{
	
		예외 발생 가능 코드1;  //NullPointerExcepiton 예외가 발생할수도 있음 
		
		예외 발생 가능 코드2; 
	
	
	}catch(예외종류처리클래스1 매개변수){
	
		예외종류1이 발생했을때 예외처리 코드;
	
	}catch(예외종류처리클래스2 매개변수){
	
		예외종류2가 발생했을때 예외처리 코드;
	
	}finally{
		
		try{}영역과 catch(){}영역 상관없이 무조건 한번수행될 코드;
	
	}

	마지막에 실행될 코드 ;

----------------------------------------------------------------------------

	설명 :  try블록에서 작성한 코드가 예외없이 정상 실행되면  catch블록은 실행되지 않고
	       finally블록이 실행된다.  그러나  try블록에서 예외가 발생하면 catch블록이 실행되고 
	       연이어 finally블록이 실행된다.
	       
	       예외 발생여부와 상관없이 finally블록은 항상 실행된다. 심지어 try블록과 catch블록에서
	       return 문 (메소드 종료구문)을 사용하더라도 finally 블록은 항상 실행된다. 
	       
	       마지막으로 finally블록만 생략해서 적지 않아도 상관없다.
	
	=================================
	
주제 : 예외 떠넘기기 

설명 
	메소드 내부에서 예외가 발생할 때  try-catch블럭으로 예외를 처리하는것이 기본이지만,
	메소드를 호출한 곳으로 예외처리를 떠넘길수도 있다.
	이떄 사용하는 키워드가 throws(스로우즈) 이다.
	throws는 메소드 선언부 끝에 작성하는데, 떠넘길 예외 클래스를 쉼표로 구분해서 나열해 주면 된다.
	
	
	class A{
	
	  try{
		//메소드 호출하는 곳
		메소드명(10,...);
	   }catch(Exception e){
	      e.printStackTrace();
	   }		
	}
		
	------------------------------------------------------------------
	
	리턴타입  메소드명(매개변수,...) throws 예외클래스명1, 예외클래스명2 {
			
			예외가 발생하는 코드1;
			예외가 발생하는 코드2;
			
			정상코드;
	}	
	
	---------------------------------------------------------------------------
	
	
	
	
 나열해야할 예외종류 클래스명이 많을 경우에는  throws Exception 또는  throws Throwable만으로
 모든 예외처리를 간단히 떠넘길수도 있다.
 
 	그림
 	
 		리턴타입   메소드명(매개변수,...) throws Exception 또는 throws Throwable   {
 		
 		
 		}	
	
	
	
main() 메소드에서도 throws키워드를 사용해서 예외처리를 떠넘길수 있는데,
결국 JVM이 최종적으로 예외처리를 하게된다. JVM은 예외의 내용을 이클립스의 Console창에 출력하는 것으로 
예외처리 합니다. 

	   public static void main(String[] args) throws Exception   {
	   
	   
	   }	
	
-----------------------------------------------------------------------------------------


   주제 : 예외 강제로 발생 시키는 코드를 작성 할수 있다.
	
	자바에서 제공하는 표준 예외 뿐만아니라 사용자 정의 예외를 직접코드에서 발생시키려면 throw키워드와 함께
	예외 객체를 제공하면 된다.  예외의 원인에 해당하는 메세지를 제공하고 싶다면 생성자 매개값으로 전달한다
		
		
	그림 
	throw new Exception();                throw  new Exception("예외메세지");
	throw new RuntimeException();		  throw  new RuntimeException("예외메세지");
	throw new InsufficientException();	  throw  new InsufficientException("예외메세지");
	
			
			
	throw된 예외는 직접 try-catch블록으로 예외를 처리할수도 있지만 
	
	그림
			void method(){
			
				try{
					//강제로 예외를 발생시키는 코드 
					throw new Exception("예외메세지");
				
				}catch(Exception e){
				
					String message = e.getMessage();
				}

				정상코드;
			
			}



	
	 대부분은 메소드를 호출한 곳에서 예외를 처리하도록 throws 키워드로 예외처리를 떠넘긴다
	 
	 	그림
			
				void method() throws Exception{
				
					//강제로 예외 발생 시키는 코드
					throw new Exception("예외메세지");
				
				}
















	
	
	
	
	
	
	
	
	




   
    	
    	
    	
