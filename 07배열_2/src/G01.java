
//예제1. 1차원 배열메모리를 생성하고 값 저장 후 저장된 값을 얻어 출력

public class G01 {

	public static void main(String[] args) {
		
		//배열메모리 생성 문법 1
		//자료형 []변수명 = new 자료형[원소갯수];
		
		//5명의 점수를 정수로 저장하기 위한 배열 메모리 선언(생성)
		int []score = new int[5];
		//             배열 메모리의 주소번지는 랜덤으로 16진수로 붙습니다
		//							 0x12
		//				-------------------------------------
		//              |  0  |  0   |  0   |  0    |   0   |
		//              -------------------------------------
		//                 0      1      2      3        4    <- index
		//  | 0x12 |  = 	
					
		//생성한 배열의 각칸(각원소)에 접근해서 값을 저장하는 문법
		//배열명[index] = 저장할값;
		score[0] = 95;
		score[1] = 70;
		score[2] = 80;
		score[3] = 75;
		score[4] = 100;
		//             배열 메모리의 주소번지는 랜덤으로 16진수로 붙습니다
		//							 0x12
		//				-------------------------------------
		//             |  95  |  70   |  80   |  75    |  100 |
		//              -------------------------------------
		//                 0      1      2      3        4    <- index
		//  | 0x12 |  = 	
				
	
		//배열에 각 원소에 저장된 데이터를 꺼내오는 문법
		//배열명[index]
		
		//score배열메모리에 0index위치의 칸(원소)에 저장되어있는 95를 꺼내와 출력
		System.out.println(score[0]); //95
		
		//for반복문을 이용하여 score 배열메모리에 저장된 각 원소(각 칸)에 저장된 데이터를 차례대로 꺼내와 출력
		for(int i=0; i<=4; i++) {
			
			System.out.println("score[" + i + "] = " + score[i]);
			
			/*
				출력결과
				score[0] = 95
				score[1] = 70
				score[2] = 80
				score[3] = 75
				score[4] = 100
			 */
			
			//             배열 메모리의 주소번지는 랜덤으로 16진수로 붙습니다
			//							 0x12
			//				-------------------------------------
			//             |  95  |  70   |  80   |  75    |  100 |
			//              -------------------------------------
			//                 0      1      2      3        4    <- index
			//  | 0x12 |  = 		
						
		}
			
	}

}
